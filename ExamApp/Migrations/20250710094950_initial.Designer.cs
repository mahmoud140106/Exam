// <auto-generated />
using System;
using ExamApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250710094950_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamApp.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("ResultId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Answers__3214EC073AC27FF5");

                    b.HasIndex("ChoiceId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResultId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ExamApp.Models.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Choices__3214EC075E2F5F6A");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Exams__3214EC07DFF4F908");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC0721A3EAB8");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamApp.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttemptNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TakenAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Results__3214EC077CB216A1");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("ExamApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07BAAD2308");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4FCF4D59F")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105346A8BC8A1")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamApp.Models.Answer", b =>
                {
                    b.HasOne("ExamApp.Models.Choice", "Choice")
                        .WithMany("Answers")
                        .HasForeignKey("ChoiceId")
                        .HasConstraintName("FK__Answers__ChoiceI__4F7CD00D");

                    b.HasOne("ExamApp.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__Answers__Questio__4E88ABD4");

                    b.HasOne("ExamApp.Models.Result", "Result")
                        .WithMany("Answers")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Answers__ResultI__4D94879B");

                    b.Navigation("Choice");

                    b.Navigation("Question");

                    b.Navigation("Result");
                });

            modelBuilder.Entity("ExamApp.Models.Choice", b =>
                {
                    b.HasOne("ExamApp.Models.Question", "Question")
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Choices__Questio__440B1D61");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.HasOne("ExamApp.Models.User", "CreatedByNavigation")
                        .WithMany("Exams")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Exams__CreatedBy__3D5E1FD2");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.HasOne("ExamApp.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Questions__ExamI__412EB0B6");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamApp.Models.Result", b =>
                {
                    b.HasOne("ExamApp.Models.Exam", "Exam")
                        .WithMany("Results")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK__Results__ExamId__47DBAE45");

                    b.HasOne("ExamApp.Models.User", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Results__Student__46E78A0C");

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Models.Choice", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Choices");
                });

            modelBuilder.Entity("ExamApp.Models.Result", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("ExamApp.Models.User", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
